version: '3.8'

services:
  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=health-prediction-dev
    networks:
      - app-network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    depends_on:
      - mongodb
    ports:
      - "9090:9090"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=9090
      - MONGO_URI=mongodb://mongodb:27017/health-prediction-dev
      - JWT_SECRET=your_jwt_secret_key_change_this_in_production
      - JWT_EXPIRE=30d
      - FRONTEND_URL=http://localhost:3000
    networks:
      - app-network
    command: npm run dev

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api/v1
    networks:
      - app-network
    command: npm start

  # ML Service (simulated for development)
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: ml-service
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./ml-service:/app
    environment:
      - MODEL_PATH=/app/models
    networks:
      - app-network
    command: python app.py

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
